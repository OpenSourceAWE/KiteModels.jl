#!/bin/bash -eu
# SPDX-FileCopyrightText: 2025 Uwe Fechner, Bart van de Lint
# SPDX-License-Identifier: MIT

if [[ $(basename "$(pwd)") == "bin" ]]; then
    cd ..
fi

export JULIA_PKG_SERVER_REGISTRY_PREFERENCE=eager

# Variables to store the determined Julia version parts
julia_version=""

# Parse command line arguments
while [[ $# -gt 0 ]]; do
    case $1 in
        --update)
            update=true
            shift
            ;;
        --version)
            if [[ $# -lt 2 ]]; then
                echo "Error: --version requires a version argument"
                exit 1
            fi
            julia_version="$2"
            shift 2
            ;;
        \+*)
            julia_version="${1#+}"
            shift
            ;;
        *)
            echo "Invalid parameter! Use:"
            echo "./create_sys_image"
            echo "or"
            echo "./create_sys_image --update"
            echo "or"
            echo "./create_sys_image --version 1.x"
            echo "or"
            echo "./create_sys_image +1.x"
            exit 1
            ;;
    esac
done

# Remove the version switching code
if [[ -n "$julia_version" ]]; then
    JULIA_CMD="julia +$julia_version"
else
    JULIA_CMD="julia"
fi

if [ -d .git ] || git rev-parse --git-dir > /dev/null 2>&1 ; then
    branch=$(git rev-parse --abbrev-ref HEAD | sed 's/\//-/g')
else
    branch=""
fi

if [[ $HOSTNAME == "ufryzen" || $HOSTNAME == "framework" ]]; then
    GCT="--gcthreads=8,1"
    # export NO_MTK=true
    export USE_V9=true
else
    GCT="--gcthreads=4,1"
fi

if [[ $branch != "" ]]; then
    if test -f "bin/kps-image-${julia_version}-${branch}.so"; then
        echo "Found system image!"
        ${JULIA_CMD} -J "bin/kps-image-${julia_version}-${branch}.so" -t 1 $GCT --project -i -e 'using KiteModels'
    else
        ${JULIA_CMD} $GCT --project -i
    fi
else
    if test -f "bin/kps-image-${julia_version}.so"; then
        echo "Found system image!"
        ${JULIA_CMD} -J "bin/kps-image-${julia_version}.so" -t 1 $GCT --project -i -e 'using KiteModels'
    else
        ${JULIA_CMD} $GCT --project -i
    fi
fi